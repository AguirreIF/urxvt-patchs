diff --git a/src/command.C b/src/command.C
index 82ad10a..b0eebc5 100644
--- a/src/command.C
+++ b/src/command.C
@@ -3885,6 +3885,10 @@ rxvt_term::process_sgr_mode (unsigned int nargs, const int *arg)
             // invisible. NYI
             break;
           //case 9: // crossed out
+          case 10: // Fake undercurl
+            rendset = 1, rendstyle = RS_Blink | RS_Uline;
+            break;
+
           //case 10: // scoansi acs off, primary font
           //case 11: // scoansi acs on, first alt font
           //case 12: // scoansi acs on, |0x80, second alt font
diff --git a/src/init.C b/src/init.C
index 95cc777..3f352dd 100644
--- a/src/init.C
+++ b/src/init.C
@@ -513,6 +513,9 @@ static const char *const def_colorName[] =
 #if ENABLE_FRILLS
     NULL,			// Color_underline
 #endif
+#if ENABLE_FRILLS
+    NULL,			// Color_undercurl
+#endif
 #ifdef OPTION_HC
     NULL,
     NULL,
@@ -1062,6 +1065,8 @@ rxvt_term::get_colours ()
       if (!name)
         continue;
 
+      fprintf(stderr, "%d - %s\n", i, name);
+
       rxvt_color xcol;
 
       if (!set_color (xcol, name))
@@ -1148,6 +1153,7 @@ rxvt_term::get_colours ()
   for (i = 0; i < (depth <= 2 ? 2 : NRS_COLORS); i++)
     update_fade_color (i);
 #endif
+
 }
 
 /*----------------------------------------------------------------------*/
diff --git a/src/optinc.h b/src/optinc.h
index d814035..fa9df0d 100644
--- a/src/optinc.h
+++ b/src/optinc.h
@@ -41,6 +41,9 @@
  nodef(override_redirect)
  nodef(urgentOnBell)
 #endif
+#if ENABLE_FRILLS
+ def(undercurlStoleColor)
+#endif
 #ifdef BUILTIN_GLYPHS
  def(skipBuiltinGlyphs) // do not use internal glyphs
 #else
diff --git a/src/rsinc.h b/src/rsinc.h
index 1483955..8ee9480 100644
--- a/src/rsinc.h
+++ b/src/rsinc.h
@@ -81,6 +81,13 @@
   def (cursorUnderline)
   def (urgentOnBell)
 #endif
+#if ENABLE_FRILLS
+  def (underlinePosition)
+  def (underlineFade)
+  def (undercurlPosition)
+  def (undercurlFade)
+  def (undercurlStoleColor)
+#endif
 #if BUILTIN_GLYPHS
   def (skipBuiltinGlyphs)
 #endif
diff --git a/src/rxvt.h b/src/rxvt.h
index f6ae411..7d4492a 100644
--- a/src/rxvt.h
+++ b/src/rxvt.h
@@ -583,6 +583,9 @@ enum colour_list {
 #if ENABLE_FRILLS
   Color_underline,
 #endif
+#if ENABLE_FRILLS
+  Color_undercurl,
+#endif
 #ifdef OPTION_HC
   Color_HC,
   Color_HTC,
diff --git a/src/screen.C b/src/screen.C
index ed42ea7..b0f6d3b 100644
--- a/src/screen.C
+++ b/src/screen.C
@@ -2051,6 +2051,16 @@ rxvt_term::scr_refresh () NOTHROW
 
   want_refresh = 0;        /* screen is current */
 
+#ifdef ENABLE_FRILLS
+  int underlinePosition = 1;
+  if (rs[Rs_underlinePosition])
+    underlinePosition = atoi(rs[Rs_underlinePosition]);
+  int undercurlPosition=1;
+  if (rs[Rs_undercurlPosition])
+    undercurlPosition = atoi(rs[Rs_undercurlPosition]);
+  rxvt_color  undercurlColor;
+#endif
+
   if (refresh_type == NO_REFRESH || !mapped)
     return;
 
@@ -2398,6 +2408,13 @@ rxvt_term::scr_refresh () NOTHROW
                   else if (hidden_text)
                     fore = back;
                 }
+#else
+          undercurlColor = pix_colors[fore];
+          if (rend & RS_Blink && rend && RS_Uline && option (Opt_undercurlStoleColor))
+            {
+              fore = Color_fg;
+            }
+
 #endif
 
 #if ENABLE_STYLES
@@ -2441,18 +2458,59 @@ rxvt_term::scr_refresh () NOTHROW
           else
             font->draw (*drawable, xpixel, ypixel, text, count, fore, back);
 
+#if ENABLE_FRILLS
+#ifndef TEXT_BLINK
+          if (ecb_unlikely (rend & RS_Blink && font->descent > 1 && fore != back))
+            {
+              // Handle undercurl
+              if (rend & RS_Uline)
+                {
+                  if (!option (Opt_undercurlStoleColor)) {
+                    if (ISSET_PIXCOLOR (Color_undercurl))
+                      undercurlColor = pix_colors[Color_undercurl];
+                    else
+                      if (rs[Rs_undercurlFade])
+                        {
+                          int percent = atoi(rs[Rs_undercurlFade]);
+                          pix_colors[fore].fade(this, percent, pix_colors[Color_undercurl]);
+                          undercurlColor  = pix_colors[Color_undercurl];
+                        }
+                  }
+                  XSetForeground (dpy, gc, undercurlColor);
+                  static const int	val[8] = {1, 0, 0, 0, 1, 2, 2, 2 };
+
+                  for (i = 0; i < Width2Pixel(count); ++i)
+                    {
+                      int offset = val[i % 8];
+                      XDrawPoint(dpy, vt, gc,
+                      xpixel+i, ypixel + font->ascent - offset + undercurlPosition +1);
+                    }
+                }
+            }
+          else
+#endif
+#endif
           if (ecb_unlikely (rend & RS_Uline && font->descent > 1 && fore != back))
             {
-#if ENABLE_FRILLS
+              int underlinePosition=1;
+              rxvt_color color = pix_colors[fore];
+#ifdef ENABLE_FRILLS
+              if (rs[Rs_underlinePosition])
+                underlinePosition = atoi(rs[Rs_underlinePosition]);
               if (ISSET_PIXCOLOR (Color_underline))
-                XSetForeground (dpy, gc, pix_colors[Color_underline]);
+                color = pix_colors[Color_underline];
               else
+                if (rs[Rs_underlineFade])
+                  {
+                    int percent = atoi(rs[Rs_underlineFade]);
+                    pix_colors[fore].fade(this, percent, color);
+                  }
 #endif
-                XSetForeground (dpy, gc, pix_colors[fore]);
+              XSetForeground (dpy, gc, color);
 
               XDrawLine (dpy, vt, gc,
-                         xpixel, ypixel + font->ascent + 1,
-                         xpixel + Width2Pixel (count) - 1, ypixel + font->ascent + 1);
+                         xpixel, ypixel + font->ascent + underlinePosition,
+                         xpixel + Width2Pixel (count) - 1, ypixel + font->ascent + underlinePosition);
             }
         }                     /* for (col....) */
     }                         /* for (row....) */
diff --git a/src/xdefaults.C b/src/xdefaults.C
index 69acdd8..45add73 100644
--- a/src/xdefaults.C
+++ b/src/xdefaults.C
@@ -169,6 +169,252 @@ optList[] = {
               RSTRG (Rs_color + minBrightCOLOR + 5, "color13", "color"),
               RSTRG (Rs_color + minBrightCOLOR + 6, "color14", "color"),
               RSTRG (Rs_color + minBrightCOLOR + 7, "color15", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 0, "color16", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 1, "color17", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 2, "color18", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 3, "color19", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 4, "color20", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 5, "color21", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 6, "color22", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 7, "color23", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 8, "color24", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 9, "color25", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 10, "color26", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 11, "color27", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 12, "color28", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 13, "color29", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 14, "color30", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 15, "color31", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 16, "color32", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 17, "color33", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 18, "color34", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 19, "color35", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 20, "color36", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 21, "color37", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 22, "color38", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 23, "color39", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 24, "color40", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 25, "color41", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 26, "color42", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 27, "color43", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 28, "color44", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 29, "color45", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 30, "color46", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 31, "color47", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 32, "color48", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 33, "color49", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 34, "color50", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 35, "color51", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 36, "color52", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 37, "color53", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 38, "color54", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 39, "color55", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 40, "color56", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 41, "color57", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 42, "color58", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 43, "color59", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 44, "color60", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 45, "color61", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 46, "color62", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 47, "color63", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 48, "color64", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 49, "color65", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 50, "color66", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 51, "color67", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 52, "color68", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 53, "color69", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 54, "color70", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 55, "color71", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 56, "color72", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 57, "color73", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 58, "color74", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 59, "color75", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 60, "color76", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 61, "color77", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 62, "color78", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 63, "color79", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 64, "color80", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 65, "color81", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 66, "color82", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 67, "color83", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 68, "color84", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 69, "color85", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 70, "color86", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 71, "color87", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 72, "color88", "color"),
+
+#if USE_256_COLORS
+              RSTRG (Rs_color + minTermCOLOR + 73, "color89", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 74, "color90", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 75, "color91", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 76, "color92", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 77, "color93", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 78, "color94", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 79, "color95", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 80, "color96", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 81, "color97", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 82, "color98", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 83, "color99", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 84, "color100", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 85, "color101", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 86, "color102", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 87, "color103", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 88, "color104", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 89, "color105", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 90, "color106", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 91, "color107", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 92, "color108", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 93, "color109", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 94, "color110", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 95, "color111", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 96, "color112", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 97, "color113", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 98, "color114", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 99, "color115", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 100, "color116", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 101, "color117", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 102, "color118", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 103, "color119", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 104, "color120", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 105, "color121", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 106, "color122", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 107, "color123", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 108, "color124", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 109, "color125", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 110, "color126", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 111, "color127", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 112, "color128", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 113, "color129", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 114, "color130", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 115, "color131", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 116, "color132", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 117, "color133", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 118, "color134", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 119, "color135", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 120, "color136", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 121, "color137", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 122, "color138", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 123, "color139", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 124, "color140", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 125, "color141", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 126, "color142", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 127, "color143", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 128, "color144", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 129, "color145", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 130, "color146", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 131, "color147", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 132, "color148", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 133, "color149", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 134, "color150", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 135, "color151", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 136, "color152", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 137, "color153", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 138, "color154", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 139, "color155", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 140, "color156", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 141, "color157", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 142, "color158", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 143, "color159", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 144, "color160", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 145, "color161", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 146, "color162", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 147, "color163", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 148, "color164", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 149, "color165", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 150, "color166", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 151, "color167", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 152, "color168", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 153, "color169", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 154, "color170", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 155, "color171", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 156, "color172", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 157, "color173", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 158, "color174", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 159, "color175", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 160, "color176", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 161, "color177", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 162, "color178", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 163, "color179", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 164, "color180", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 165, "color181", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 166, "color182", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 167, "color183", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 168, "color184", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 169, "color185", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 170, "color186", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 171, "color187", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 172, "color188", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 173, "color189", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 174, "color190", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 175, "color191", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 176, "color192", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 177, "color193", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 178, "color194", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 179, "color195", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 180, "color196", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 181, "color197", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 182, "color198", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 183, "color199", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 184, "color200", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 185, "color201", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 186, "color202", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 187, "color203", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 188, "color204", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 189, "color205", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 190, "color206", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 191, "color207", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 192, "color208", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 193, "color209", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 194, "color210", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 195, "color211", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 196, "color212", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 197, "color213", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 198, "color214", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 199, "color215", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 200, "color216", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 201, "color217", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 202, "color218", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 203, "color219", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 204, "color220", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 205, "color221", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 206, "color222", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 207, "color223", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 208, "color224", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 209, "color225", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 210, "color226", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 211, "color227", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 212, "color228", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 213, "color229", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 214, "color230", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 215, "color231", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 216, "color232", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 217, "color233", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 218, "color234", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 219, "color235", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 220, "color236", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 221, "color237", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 222, "color238", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 223, "color239", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 224, "color240", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 225, "color241", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 226, "color242", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 227, "color243", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 228, "color244", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 229, "color245", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 230, "color246", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 231, "color247", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 232, "color248", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 233, "color249", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 234, "color250", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 235, "color251", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 236, "color252", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 237, "color253", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 238, "color254", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 239, "color255", "color"),
+              RSTRG (Rs_color + minTermCOLOR + 240, "color256", "color"),
+#endif
+
+
 #ifndef NO_BOLD_UNDERLINE_REVERSE
               RSTRG (Rs_color + Color_BD, "colorBD", "color"),
               RSTRG (Rs_color + Color_IT, "colorIT", "color"),
@@ -178,6 +424,15 @@ optList[] = {
 #if ENABLE_FRILLS
               RSTRG (Rs_color + Color_underline, "underlineColor", "color"),
 #endif
+#if ENABLE_FRILLS
+              STRG (Rs_underlinePosition, "underlinePosition", "ulp", "number", "Underline position"),
+              STRG (Rs_underlineFade, "underlineFade", "ulf", "number", "Underline fading factor (default 0)"),
+
+              RSTRG (Rs_color + Color_undercurl, "undercurlColor", "color"),
+              STRG (Rs_undercurlPosition, "undercurlPosition", "ulp", "number", "Undercurl position"),
+              STRG (Rs_undercurlFade, "undercurlFade", "ucf", "number", "Undercurl fading factor (default 0)"),
+              BOOL (Rs_undercurlStoleColor, "undercurlStoleColor", "ucsc", Opt_undercurlStoleColor, 0, "Stole color from text to colorize undercurl"),
+#endif
               RSTRG (Rs_color + Color_scroll, "scrollColor", "color"),
 #ifdef RXVT_SCROLLBAR
               RSTRG (Rs_color + Color_trough, "troughColor", "color"),
